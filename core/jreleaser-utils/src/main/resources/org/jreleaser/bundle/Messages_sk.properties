#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2020-2022 The JReleaser authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# TRANSLATIONS NOTES:
# - please respect the capitalization of the first word
# - DSL property names must remain as is, e.g, 'basedir'
# - do not translate 'false', 'true'
###############################################################################

yes = ano
no  = nie
not = nie

ERROR_unexpected_error = Neocakavana chyba
ERROR_unsupported_platform_override = Nepodporovana platforma '{}', pouziva sa '{}' namiesto

ERROR_context_creator_parse_configuration         = Neocakavana chyba pri parsovani konfiguracie z {}
context.creator.reading_configuration             = Citanie konfiguracie
context.creator.report.project-version            = Verzia projektu nastavena na {}
context.creator.report.release                    = Release je{}snapshot
context.creator.report.timestamp                  = Timestamp je {}
context.creator.report.head                       = HEAD je v {}
context.creator.report.platform                   = Platform je {}
context.configurer.auto-config.on                 = Automaticka konfiguracia je ZAPNUTA (ON)
# do not translate basedir
context.configurer.basedir.set                    = - basedir nastavena na {}
ERROR_context_configurer_unsupported_url          = Automaticka konfiguracia nepodporuje {}
# do not translate release.updateSections, release.update
ERROR_context_configurer_update_not_set           = release.updateSections je nastavena ale release.update je false
ERROR_context_configurer_fail_git_head            = Nepodarilo sa urcit git HEAD
ERROR_context_configurer_fail_git_remote          = Nepodarilo sa urcit remote
ERROR_context_configurer_jreleaser_misconfigured  = JReleaser nebol spravne nakonfigurovany.
ERROR_context_configurer_detected_git             = Bola zistena automaticka konfiguracia {} ale projekt ma {} nakonfigurovany
ERROR_context_configurer_detected_git_owner       = Bola zistena automaticka konfiguracia '{}' ako vlastnik repository ale projekt ma '{}' nakonfigurovany
ERROR_context_configurer_detected_git_name        = Bola zistena automaticka konfiguracia '{}' ako meno repository ale projekt ma '{}' nakonfigurovany
ERROR_context_configurer_detected_git_branch      = Bola zistena automaticka konfiguracia '{}' ako default branch ale projekt ma '{}' nakonfigurovany
ERROR_version_parse                               = Nemozno parsovat verziu '{}'
ERROR_version_parse_with                          = Nemozno parsovat verziu '{}' s '{}'
ERROR_unsupported_algorithm                       = Nepodporovany algoritmus {}
ERROR_calver_year                                 = Format nezacina ako YYYY/YY/0Y token: '{}'
ERROR_calver_month                                = Format definuje MM/0M token takze nemoze mat WW/0W token: '{}'
ERROR_calver_week_month                           = Format definuje WW/0W token takze nemoze mat MM/0M token: '{}'
ERROR_calver_week_day                             = Format definuje WW/0W token takze nemoze mat DD/0D token: '{}'
ERROR_calver_micro_duplicate                      = Format definuje dva MICRO tokeny: '{}'
ERROR_calver_minor_duplicate                      = Format definuje dva MINOR tokeny: '{}'
ERROR_calver_micro_minor                          = Format definuje MINOR token az po MICRO: '{}'

ERROR_command_hook_unexpected_error = Neocakavana chyba pri spustani command hook
ERROR_command_hook_parser_error     = Chyba pri parsovani z command line: {}
ERROR_unbalanced_quotes             = Nevyvazene uvodzovky v {}
hooks.execution                     = Spusta sa {} hook(ov): {} celkom

announcers.header                = Announcuje sa release
announcers.not.enabled           = Announcing nieje povoleny. Skippuje sa
announcers.not.configured        = Ziadny announcer nebol nakonfigurovany. Skippuje sa 
announcers.announcer.not.found   = Announcer {} nebol najdeny. Skippuje sa
announcers.announcer.not.enabled = Announcer {} nie je povoleny. Skippuje sa
announcers.announcer.excluded    = Announcer {} bol excludovany. Skippuje sa 
announcers.announcer.disabled    = nepodporovane. Skippuje sa
ERROR_unsupported_announcer      = Nepodporovany announcer {}
ERROR_announcer_not_configured   = Announcer {} nebol nakonfigurovany

assemblers.not.enabled                     = Assemblovanie nie je povolene. Skippuje sa
assemblers.no.match                        = Ziadny assembler sa nezhoduje {}
assemblers.distribution.not.configured     = Distribution {} nie je nakonfigurovana na assembling s {}
assemblers.assemble.distribution.with      = Assembluje sa {} distribucia s {}
assemblers.assemble.distribution.with.all  = Assembluje sa {} distribucia so vsetkymi assemblermi
assemblers.assemble.all.distributions.with = Assembluju sa vsetky distribucie s {}
assemblers.assemble.all.distributions      = Assembluju sa vsetky distribucie
assemblers.distribution.skip               = skippuje sa pre {} distribucie
assemblers.distribution.assemble           = assumbluju sa {} distribucie
assemblers.assembler.excluded              = Assembler {}:{} bol excludovany. Skippuje sa
ERROR_unsupported_assembler                = Nepodporovany assembler {}

ERROR_unexpected_error_changelog = Neocakavana chyba pri vytvarani changelogu
ERROR_cannot_read_changelog      = Nemozno citat changelog z {}

checksum.header                           = Kalkuluju sa checksums
checksum.not.enabled                      = Ziadne subory nakonfigurovane pre checksum. Skippuje sa
checksum.not.changed                      = Vsetky checksums su aktualne. Skippuje sa
checksum.not.exist                        = checksum neexistuje: {}
checksum.file.newer                       = {} je novsi ako {}
checksum.reading                          = citanie {}
ERROR_unexpected_error_checksum           = Neocakavana chyba pri zapisovani checksums do {}
ERROR_artifact_does_not_exist             = Artifact neexistuje. {}
ERROR_unexpected_error_hash_read          = Neocakavana chyba pri citani hash z {}
ERROR_unexpected_error_calculate_checksum = Neocakavana chyba pri kalkulovani checksum pre {}

packagers.packager.excluded                = packager {} bol vyluceny. Skippuje sa
distributions.distribution.excluded        = distribution {} bol vyluceny. Skippuje sa
distributions.not.enabled                  = Ziadne aktivne distribucie pre {}. Skippuje sa
distributions.no.match                     = Distribution {} neexistuje
distributions.apply.action                 = {} distribucie 
distributions.apply.action.to              = - {} {} distribucie
distributions.skip.distribution            = skippuje sa pre {} distribuciu
distributions.not.supported.distribution   = distribution {} s typom {} nie je prodporovana. Skippuje sa
distributions.action.preparing.capitalize  = Preparuje sa
distributions.action.packaging.capitalize  = Packaguje sa
distributions.action.publishing.capitalize = Publishuje sa
distributions.action.preparing             = preparuje sa
distributions.action.packaging             = packaguje sa
distributions.action.publishing            = publishuje sa
distributions.apply.action.distribution    = {} {} distribution
distributions.failure                      = zlyhanie: {}
distributions.previous.failure             = skippuje sa z dovodu predchadzajuceho zlyhania
ERROR_unsupported_packager                 = Nepodporovany packager {}

ERROR_releaser_no_match = Ziadny vhodny git releaser bol nakonfigurovany

signing.header                       = Signing suborov
signing.not.enabled                  = Signing nieje povoleny. Skippuje sa
signing.no.match                     = Ziadne subory neboli konfigurovane pre signing. Skippuje sa
signing.up.to.date                   = Vsetky signatures su aktualne a validne. Skippuje sa
signing.verify.signatures            = overuju sa {} signatures
signing.signing.files                = signing {} suborov do {}
signing.signature.not.exist          = signature neexistuje: {}
signing.file.newer                   = {} je novsi ako {}
ERROR_signing_verify_file            = Nemozno verifikovat subor {} so signature {}
ERROR_signing_verify_signature       = Chyba pri verifikovani signature od {}
ERROR_signing_create_signature_dir   = Nebolo mozne vytvorit signatures directory
ERROR_unexpected_error_signature_gen = Neocakavana chyba pri inicializacii signature generatora
ERROR_unexpected_error_signing       = Neocakavana chyba pocas signing
ERROR_public_key_not_found           = Nenasiel sa public key pre signing
ERROR_password_incorrect             = Hesla sa nezhoduju

uploaders.not.enabled               = Uploading nie je povoleny. Skippuje sa
uploaders.no.match                  = Ziadny uploaders zhoda {}
uploaders.uploader.not.configured   = Uploader {}/{} nie je nakonfigurovany
uploaders.uploader.not.configured2  = Uploader {} nie je nakonfigurovany
uploaders.upload.with               = Uploading spolu s {}/{}
uploaders.upload.all.artifacts.with = Uploading vsetky artifacts spolu s {}
uploaders.upload.all.artifacts.to   = Uploading vsetky artifacts do {}
uploaders.upload.all.artifacts      = Uploading vsetky artifacts
uploaders.skip.upload               = skippuje sa upload pre {}
uploaders.upload.to                 = uploading do {}
uploaders.uploader.excluded         = Uploader {}:{} bol vyluceny. Skippuje sa
uploaders.uploader.disabled         = Uploader {}:{} nie je povoleny. Skippuje sa
ERROR_unsupported_uploader          = Nepodporovany uploader {}

downloaders.not.enabled                 = Stahovanie nie je povolene. Skippuje sa
downloaders.no.match                    = Ziadna downloaders zhoda {}
downloaders.downloader.not.configured   = Downloader {}/{} nie je nakonfigurovany
downloaders.downloader.not.configured2  = Downloader {} nie je nakonfigurovany
downloaders.download.with               = Downloaduju sa spolu s {}/{}
downloaders.download.all.artifacts.with = Downloaduju sa vsetky artifacts spolu s {}
downloaders.download.all.artifacts.from = Downloaduju sa vsetky artifacts z {}
downloaders.download.all.artifacts      = Downloaduju sa vsetky artifacts
downloaders.skip.download               = skippuje sa download pre {}
downloaders.download                    = downloaduje sa {}
downloaders.downloader.excluded         = Downloader {}:{} bol vyluceny. Skippuje sa
downloaders.downloader.disabled         = Downloader {}:{} nie je povoleny. Skippuje sa
ERROR_unsupported_downloader            = Nepodporovany downloader {}

packager.publish.snapshot.not.supported = publication of snapshots is not allowed. Skippuje sa.
packager.create.properties              = creating props for {}/{}
packager.skip.distribution              = skipping {} distribution
ERROR_copy_files_from_to                = Could not copy files from {} to {}
ERROR_unexpected_copy_files_from_to     = Unexpected error when copying files from {} to {}
packager.no.matching.artifacts          = no suitable artifacts found in distribution {} to be packaged with {}
packager.fill.distribution.properties   = filling distribution properties into props
packager.fill.git.properties            = filling git properties into props
packager.fill.artifact.properties       = filling artifact properties into props
packager.fill.packager.properties       = filling packager properties into props
packager.resolve.templates              = resolving templates for {}/{}
packager.skipped.template               = skipping template {} for {}/{}
packager.evaluate.template              = evaluating template {} for {}/{}
packager.write.template                 = writing template {} for {}/{}
packager.write.file                     = writing file {} for {}/{}
packager.copy.license                   = kopiruju sa license subory

ERROR_brew_multiplatform_artifacts       = There are no matching multi-platform binaries
ERROR_packager_requires_platform         = musi bezat na {}
ERROR_packager_excludes_platform         = nemoze bezat na {}
ERROR_chocolatey_nuget_not_found         = Did not find *.nupkg at {}
dryrun.set                               = dry-run is set to true. Skipping
docker.no.registries                     = no configured registries. Skipping
docker.login                             = login into {}{}
docker.tag                               = tagging {} as {}
docker.push                              = pushing {} to {}{}
docker.logout                            = logout from {}{}
sdkman.no.artifacts.match                = Artifact {} is not suitable for Sdkman publication. Skipping
sdkman.artifact.explicit.skip            = Artifact {} is explicitly skipped
sdkman.platform.replacement              = Platform {}: {} will replace {}
sdkman.platform.unsupported              = Sdkman does not support platform {}
sdkman.publish.major                     = publishing major release of '{}' candidate
sdkman.publish.minor                     = publishing minor release of '{}' candidate
ERROR_project_no_license_url             = Project does not define a value for licenseUrl

tool.cached                              = cached {}
tool.located                             = located {}
tool.downloading                         = downloading {}
tool.downloaded                          = downloaded {} successfully
tool.unpacked                            = unpacked {}
tool.not.found                           = {} nenajdeny
tool.download.error                      = {} could not be downloaded/copied

tool_verify_error                          = Could not verify {} {}. Skipping
tool_unavailable                           = {} is not available. Skipping
cosign.generated.keys.at                   = Generated cosign key pair at {}
WARN_cosign_password_does_not_match        = cosign password does not match
ERROR_unexpected_generate_key_pair         = Unexpected error generating key pair
assembler.fill.assembler.properties        = filling assembler properties into props
ERROR_unexpected_error_writing_file        = Neocakavana chyba pri zapisovani do {}
ERROR_command_execution_exit_value         = Chyba vykonavania commandu. exitValue = {}
assembler.jlink.jdk                        = jdk verzia je {} {}
assembler.jlink.target                     = target verzia je {} {}
ERROR_jlink_target_not_compatible          = Target JDK {} nie je kompatibilne s {}
assembler.copy.jars                        = copying JARs to {}
assembler.copy.files                       = copying files to {}
ERROR_assembler_delete_archive             = Could not delete previous archive {}
assembler.resolved.module.names            = resolved moduleNames: {}
assembler.module.names                     = moduleNames: {}
ERROR_assembler_no_module_names            = Could not resolve module names
ERROR_assembler_jdeps_error                = An error occurred when executing jdeps:\n{}
ERROR_assembler_delete_dir                 = Could not delete {}
ERROR_assembler_delete_image               = Could not delete previous image {}
ERROR_assembler_adjusting_image            = Could not adjust image {}
ERROR_assembler_copy_jars                  = Could not copy JARs to {}
ERROR_assembler_copy_launcher              = Could not copy launcher to {}
ERROR_assembler_invalid_jdk_release        = Invalid JDK {} release file not found
ERROR_assembler_invalid_jdk_release_file   = Invalid JDK release file {}
assembler.copying                          = copying {}
ERROR_assembler_copying_jars               = Unexpected error when copying JAR files
ERROR_assembler_copying_files              = Unexpected error when copying files
ERROR_assembler_create_directories         = Could not create directories
assembler.graal.java                       = java version is {} {}
assembler.graal.graal                      = graal version is {} {}
assembler.graal.install.native.exec        = installing native-image executable
ERROR_assembler_invalid_graal_release      = Invalid Graal {} release file not found
ERROR_assembler_invalid_graal_release_file = Invalid Graal release file {}
assembler.jpackage.jdk                     = jdk version is {} {}
assembler.jpackage.type                    = packaging as {}
ERROR_jpackage_minimum_jdk_required        = jpackager requires JDK 16 as a minimum. JDK version is {}
ERROR_jpackage_runtime_image_not_found     = Could not find a runtime image matching {}

ERROR_invalid_config_file       = Neplatny config subor. {}
ERROR_parsing_config_file       = Neocakavana chyba pri parsovani config suboru. {}
ERROR_load_resource             = Neocakavana chyba pri nacitani resource. {}
ERROR_unsupported_config_format = Nepodporovany config format. {}

releaser.tag.and.release.skipped = Release a tag sa skippuju

artifacts.not.exists                     = Artifact neexistuje: {}
artifacts.newer                          = {} je novsi ako {}
ERROR_artifacts_unexpected_error_copying = Neocakavana chyba pri kopirovani {} do {}
ERROR_artifacts_glob_missing_input       = Vstup neexistuje: {}
ERROR_artifacts_glob_resolution          = Niektore globs sa nepodarilo resolvnut
ERROR_artifacts_unexpected_error_globs   = Neocakavana chyba pri resolvovani globs
ERROR_artifacts_unexpected_error_path    = Neocakavana chyba pri visiting path {}
ERROR_artifacts_download_url_missing     = nemozno resolvnut downloadUrl pre {}. Pouzitie predvolenych nastaveni z {}

validation_multiple_primary_screenshots  = Obsahuje viac ako 1 primary screenshot v {}
validation_java_home_missing             = Java home sa nepodarilo najst
validation_s3_missing_download_url       = {} defines a custom endpoint but no downloadUrl
validation_gitlab_non_matching_uploader  = Uploader {}:{} is not configured
validation_artifactory_disabled_repositories = {} has no active repositories
validation_artifactory_no_repositories   = {} has not defined any repositories
validation_must_define_pattern           = {} must define a pattern
validation_version_format_missing        = {} must define a format such as {}:<format>
validation_must_not_be_blank             = {} nemoze byt blank
validation_must_not_be_null              = {} nemoze byt null
validation_is_null                       = {} je null
validation_is_empty                      = {} je empty
validation_is_missing                    = {} je chybajuce
validation_are_missing                   = {} su chybajuce
validation_directory_not_exist           = {} neexisuje: {}
validation_is_not_a_directory            = {} nie je directory: {}
validation_directory_is_empty            = {} je empty: {}
validation_must_not_be_empty             = {} nemoze byt empty
validation_value_cannot_be               = {} nemoze byt {}
validation_stereotype_invalid            = {} nemoze byt {}. It must be one of {}
validation_multiple_assemblers           = {} has more than 1 assembler: {}
validation_chocolatey_package_version    = Invalid chocolatey package version {}. Follow SemVer with optional .number or .yyyyMMdd as tag
validation_brew_multiple_artifact        = {} has more than one {} artifact
validation_brew_single_artifact          = {} can only have a single matching .dmg, .pkg, or .zip artifact
validation_brew_duplicate_definition     = {} je definovany pre viac ako jednu distribution: {}
# do not translate .buildOn
validation_snap_missing_buildon          = {}[{}].buildOn must define at least one entry
validation_packager_multiple_artifacts   = {} has more than one artifact that may be packaged
validation_discussions_enabled           = Discussions may only be used when releasing to GitHub
validation_distributions_java            = {} is set to {} but neither {} nor {} have been set
validation_distributions_multiple        = {} has more than one artifact with {} platform for extension {}
validation_distributions_java_types      = {} must be a valid Java distribution type, one of [{}]
# do no translate distribution.{}.artifact[{}].platform
validation_distributions_platform        = distribution.{}.artifact[{}].platform ({}) is not supported. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do not translate distribution., platform
validation_distributions_platform_check  = distribution.{} is of type {} and {} requires a explicit platform on each artifact
# do not translate distribution.
validation_distributions_disable         = disabling distribution.{}.{} because there are no matching artifacts
validation_docker_no_registries          = {} does not define any registries. Image publication will be disabled
validation_github_releasenotes_changelog = Both releaseNotes and changelog cannot be enabled at the same time
# do not translate .sign
validation_git_signing                   = {}.sign is set to `true` but the signing block is not enabled
validation_git_signing_cosign            = {}.sign is set to `true` but the signing block is set to COSIGN mode. Disabling
validation_git_required                  = {} or {} is required
# do not translate .changelog
validation_changelog_multiple_categories = {}.changelog has more than one category with title: {}
# do not translate distribution.{}.jbang
validation_jbang_reverse_host            = distribution.{}.jbang must define an extra property named {}
# do not translate jbang.alias
validation_jbang_multiple_definition     = jbang.alias {} is defined for more than one distribution: {}
validation_missing_assembly              = Missing outputs for {}.{}. Distribution {} has not been assembled
# do not translate archive.
validation_archive_empty_fileset         = archive.{} does not define fileSets
# do not translate jlink., platform
validation_jlink_jdk_platform            = jlink.{} defines JDKs without platform
# do not translate jlink.
validation_jlink_jdk_multiple_platforms  = jlink.{} has more than one JDK for {}
# do no translate jlink.{}.targetJdk[{}].platform
validation_jlink_platform                = jlink.{}.targetJdk[{}].platform ({}) is not supported. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do not translate nativeImage., platform
validation_nativeimage_jdk_platform      = nativeImage.{} defines JDKs without platform
# do not translate nativeImage.
validation_nativeimage_jdk_multiple_platforms = nativeImage.{} has more than one JDK for {}
# do no translate nativeImage.{}.graalJdk[{}].platform
validation_nativeimage_platform          = nativeImage.{}.graalJdk[{}].platform ({}) is not supported. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do no translate jpackage.{}.runtimeImage[{}].platform
validation_jpackage_platform             = jpackage.{}.runtimeImage[{}].platform ({}) is not supported. \
  Please use `${name}` or `${name}-${arch}` from{}       name = {}{}       arch = {}
# keep these spaces ----------------------------->       <--------->       <------->
# do not translate jpackage., jlink, runtimeImage
validation_jpackage_jlink_application    = jpackage.{} defines both jlink and runtimeImages but only one may be used.
validation_jpackage_invalid_appversion   = The first number in an app-version cannot be zero or negative ({}).\n\
Advice to fix: Set a compatible 'app-version' value. Valid versions are one to three integers separated by dots.
validation_jpackage_invalid_mac_package_identifier = {} does not match {}
validation_jpackage_invalid_mac_package_name       = {} can not be longer than 16 characters
# do not translate jpackage.{}.runtimeImage.path
validation_jpackage_runtime_images_missing          = jpackage.{}.runtimeImages are missing
# do not translate jpackage.{}.vendor
validation_jpackage_missing_vendor       = jpackage.{}.vendor is missing
# do not translate jpackage., platform
validation_jpackage_runtime_image_platform = jpackage.{} defines runtime images without platform
# do not translate jpackage.
validation_jpackage_runtime_image_multiple_platforms  = jpackage.{} has more than one runtime image for {}
validation_mail_not_blank                = {} or {} must not be blank
# do not translate docker.specs
validation_packagers_docker_specs        = docker.specs can only be defined inside distributions
validation_release_no_providers          = No release provider has been configured
validation_release_requirement           = Only one of {} can be enabled
validation_skdman_disable                = There are no active distributions. Disabling Sdkman announcer
# do not translate sdkman.candidate
validation_sdkman_multiple_definition    = sdkman.candidate {} is defined for more than one distribution: {}
# do not translate slack.token, slack.webhook
validation_slack_token                   = slack.token alebo slack.webhook musia byt poskytnute

default.discussion.title = {{projectNameCapitalized}} {{projectVersion}} released!
default.release.message  = 🚀 {{projectNameCapitalized}} {{projectVersion}} has been released! {{releaseNotesUrl}}
default.category.feature = 🚀 Features
default.category.bug.fix = 🐛 Bug Fixes

ERROR_path_does_not_exist               = Path neexisujte {}
ERROR_unexpected_error_reading_template = Neocakavana chyba pri citani template {}
ERROR_packager_name_not_blank           = Packager name must not be blank
ERROR_packager_not_configured           = Packager {} nebol nakonfigurovany
ERROR_packager_not_supported            = Packager {} nie je prodporovany

environment.load.variables           = Loading variables from {}
environment.variables.load.error     = Could not load variables from {}
environment.variables.source.missing = Variables source {} does not exist

ERROR_unexpected_glob_resolve = Unexpected error resolving glob {}
ERROR_glob_resolve            = Could not resolve glob {}

context.platform.selection.active    = Platform selection is in effect
context.platform.selection.no.match  = The following platforms did not match: {}
context.platform.selection.valid     = Please use `${name}` or `${name}-${arch}` from{}        name = {}{}        arch = {}
# keep these spaces ------------------------------------------------------------------>        <--------->        <------->
context.platform.selection.unmatched = Unmatched platforms: {}
context.platform.selection.artifacts = Artifacts will be filtered by platform matching: {}
context.configuration.validation     = Validating configuration
context.adjust.assemblies            = adjusting distributions with assemblies
context.writing.properties           = Writing output properties to {}
context.writing.properties.error     = Could not write output properties to {}
ERROR_signing_init_keyring           = Could not initialize keyring
ERROR_distribution_name_is_blank     = Distribution name must not be blank
ERROR_distribution_not_found         = Distribution {} not found
ERROR_version_invalid                = Version {} does not follow the {} spec
ERROR_invalid_function_input         = Invalid input '{}' for {}

templates.resource.resolve.classpath            = resolving resource from classpath for {}
templates.templates.resolve.classpath           = resolving templates from classpath
templates.template.resolve.classpath            = resolving template from classpath for {}
changelog.preset.not.found                      = No changelog preset {} found
ERROR_classpath_template_resolve                = Could not find location of classpath templates
ERROR_unexpected_reading_template_for           = Unexpected error reading template for {} from {}
ERROR_unexpected_reading_resource_for           = Unexpected error reading resource {} from {}
ERROR_unexpected_reading_templates_distribution = Unexpected error reading templates for distribution {}/{} from {}
ERROR_unexpected_reading_templates_from         = Unexpected error reading templates from {}
ERROR_template_not_found                        = Template for {} was not found
ERROR_resource_not_found                        = Resource {} was not found

templates.announcer.not.supported = Announcer {} is not supported
templates.create.directory        = Creating output directory {}
templates.writing.file            = Writing file {}
templates.file_exists.error       = File {} already exists and overwrite was set to false
# do not translate distributionType, distributionName, toolName
ERROR_unexpected_template_fail    = Unexpected error when generating template. distributionType={}, distributionName={}, toolName={}

ERROR_environment_property_check  = {} must not be blank. Configure a value using the {}, or define a {} environment variable, or define a key/value pair in {} with key = {}
ERROR_environment_property_check2 = {} must not be blank. Configure a value using the {}, or define {} environment variables, or define a key/value pair in {} with keys = {}
ERROR_files_unpack_outside_target = Entry is outside of the target dir: {}
ERROR_files_unpack_fail_dir       = failed to create directory {}
ERROR_files_copy                  = Unable to copy: {}
ERROR_files_create                = Unable to create: {}
ERROR_files_cycle                 = Cycle detected: {}
ERROR_files_copy_attributes       = Unable to copy all attributes to: {}
ERROR_mustache_write_value        = Failed to write value:
ERROR_invalid_file_input          = Input {} is not a File, Path, nor CharSequence.
ERROR_unexpected_file_read        = Unexpected error when reading file {}
files.copy                        = copying files from {} to {}

ERROR_unexpected_release_announce  = Unexpected error when announcing release
ERROR_unexpected_release_create    = Unexpected error when creating release
ERROR_unexpected_release_sign      = Unexpected error when signing release
workflow.dryrun                    = dry-run set to {}
workflow.success                   = JReleaser succeeded after {}
workflow.failure                   = JReleaser failed after {}
workflow.included.announcers       = Included announcers: {}
workflow.excluded.announcers       = Excluded announcers: {}
workflow.included.assemblers       = Included assemblers: {}
workflow.excluded.assemblers       = Excluded assemblers: {}
workflow.included.distributions    = Included distributions: {}
workflow.excluded.distributions    = Excluded distributions: {}
workflow.included.packagers        = Included packagers: {}
workflow.excluded.packagers        = Excluded packagers: {}
workflow.included.uploader.types   = Included uploaders by type: {}
workflow.excluded.uploader.types   = Excluded uploaders by type: {}
workflow.included.uploader.names   = Included uploaders by name: {}
workflow.excluded.uploader.names   = Excluded uploaders by name: {}
workflow.included.downloader.types = Included downloaders by type: {}
workflow.excluded.downloader.types = Excluded downloaders by type: {}
workflow.included.downloader.names = Included downloaders by name: {}
workflow.excluded.downloader.names = Excluded downloaders by name: {}

ERROR_unexpected_article_announcer   = Neocakavana chyba pri priprave {}
# no not translate article
announcer.article.resolve.templates  = resolving templates for article announcer
announcer.article.eval.template      = evaluating template {}
announcer.article.write.template     = writing template {}
ERROR_unexpected_template_resolution = Unexpected error resolving templates from {}
repository.disabled                  = pushing to {} is disabled. Skipping
repository.setup                     = setting up repository {}
repository.locate                    = locating repository {}
repository.clone                     = cloning {}
repository.commit.setup              = setting up commit
repository.push                      = pushing to {}
repository.commit.push               = pushing commit to remote
ERROR_unexpected_repository_update   = Unexpected error updating {}
repository.copy.files                = copying files from {}
ERROR_repository_copy_files          = Could not copy files from {}

uploader.uploading.to          = uploaduje sa na {}
downloader.unpack              = unpackuje sa {}
ERROR_login                    = Neplatne credentials
ERROR_disconnect               = Neocakavana chyba pri disconnectingu z {}
ERROR_ssh_mkdir                = Neocakavana chyba pri vytvarani path {}
ERROR_unexpected_download_from = Neocakavana chyba pri stahovani z {}
ERROR_unexpected_download      = Neocakavana chyba pri stahovani {}
ERROR_download_url_unpack      = Neocakavana chyba pri unpackingu {}

artifacts.no.match         = No matching artifacts. Skipping
ERROR_unexpected_upload    = Unexpected error when uploading {}
ERROR_unexpected_upload_to = Unexpected error when uploading to {}
generic.git.warning        = Releasing to a generic Git repository is not supported
changelog.disabled                      = Changelog nie je povoleny. Skippuje sa
changelog.generator.resolve.commits     = resolving commits
changelog.generator.sort.commits        = sorting commits {}
changelog.generator.lookup.tag          = looking for tag that matches '{}'
changelog.generator.lookup.previous.tag = looking for previous tag '{}'
changelog.generator.lookup.matching.tag = looking for tags that match '{}', excluding '{}'
changelog.generator.lookup.before.tag   = looking for a tag before '{}' that matches '{}'
changelog.generator.tag.found           = najdeny tag {}
changelog.generator.generate            = Generuje sa changelog: {}
changelog.generator.read                = Cita sa changelog z {}
ERROR_changelog_not_exist               = Changelog {} neexistuje
ERROR_git_repository_remote             = repository nema remote s menom '{}'
ERROR_git_repository_remote_missing_url = {} remote nema nakonfigurovanu URL
ERROR_git_repository_remote_url_parse   = Neparsovatelna remote URL {}
# do not translate origin
ERROR_git_repository_origin_remote      = Nepodarilo sa urcit 'origin' remote
ERROR_git_repository_list_local_branch  = Nepodarilo sa vylistovat lokalne branches
ERROR_git_delete_tag                    = Nepodarilo sa vymazat tag {}
ERROR_git_find_tag                      = Nepodarilo sa najst tag {}
ERROR_git_create_tag                    = Nepodarilo sa vytvorit tag {}
git.tag                                 = Tagguje sa {}
git.tag.lookup                          = vyhladava sa tag {}
git.tag.exists                          = tag {} existuje
git.tag.release                         = tagguje sa release {}
ERROR_git_release_existing_tag          = Release zlyhal pretoze tag {} uz existuje. overwrite = false
git.tag.not.exist                       = tag {} neexsituje
git.push.release                        = pushuje sa do {}
git.push.tag                            = pushuje sa tag do remote, dryrun = {}
git.repository.lookup                   = vyhladava sa repository {}/{}
git.repository.create                   = vytvara sa repository {}/{}
git.milestone.lookup                    = vyhladava sa milestone '{}' na {}/{}
git.milestone.close                     = zatvara sa milestone '{}' na {}/{}
git.project.create                      = vytvorenie projektu {}/{}
git.fetch.current.user                  = fetchuje sa current user
git.fetch.gitlab.project_by_id          = fetchuje sa project s GitLab id {}
git.fetch.gitlab.project.by.user        = fetchuje sa project {} pre usera {} ({})
ERROR_project_not_exist                 = Project {} neexistuje alebo nie je visible
git.gitlab.project.found                = najdene {} (ID: {})
git.list.releases                       = fetchuju sa vsetky releases na {}/{}
git.list.branches                       = fetchuju sa vsetky branches na {}/{}
git.list.assets.github                  = fetchuju sa vsetk assets na {}/{} a release {}
git.fetch.release.by.tag                = fetchuju sa release na {}/{} s taggom {}
git.fetch.release.on.tag                = fetchuju sa release z {} s taggom {}
git.delete.tag.from                     = vymazuje sa tag {} z {}/{}
git.delete.tag.from.repository          = vymazuje sa tag {} z {}
git.delete.release.from                 = vymazuje sa release {} z {}/{}
git.delete.release.from.id              = vymazuje sa release {} z {}/{} ({})
git.create.release                      = vytvaraju sa release na {}/{} s taggom {}
git.create.release.repository           = vytvaraju sa release na {} s taggom {}
git.update.release                      = updatuju sa release na {}/{} s taggom {}
git.upload.assets                       = uploaduju sa assets do {}/{}
git.upload.asset                        = - nahrava sa {}
git.upload.asset.failure                = x nepodarilo sa uploadnut {}
git.delete.asset                        = - vymazuje sa {}
git.delete.asset.failure                = x nepodarilo sa odstranit {}
git.update.asset                        = - aktualizuje sa {}
git.update.asset.failure                = x nepodarilo sa aktualizovat {}
git.upload.asset.links                  = prepajaju sa assety do {}/{} s taggom {}
git.upload.asset.link                   = - prepaja sa {}
git.upload.asset.link.failure           = x nepodarilo sa prepojit {}
git.user.lookup                         = hlada sa user pre {} <{}>
ERROR_git_organization_not_exist        = Organization {} neexistuje
ERROR_git_team_not_exist                = Team {} neexistuje
git.releaser.releasing                  = Releasuje sa do {}
git.releaser.release.lookup             = hlada sa release s taggom {} v repository {}
git.releaser.release.exists             = release {} existuje
git.releaser.release.delete             = vymazuje sa release {}
git.releaser.release.create             = vytvara sa release {}
git.releaser.release.update             = aktualizuje sa release {}
git.releaser.release.update.title       = aktualizuje sa release title na {}
git.releaser.release.update.body        = aktualizuje sa release body
git.releaser.release.not.found          = release {} neexistuje
git.releaser.user.not.found             = Could not find user matching {}
git.releaser.repository.tag             = tagguje sa local repository s {}
github.generate.release.notes           = Generuju sa release notes na {}/{} pre {}..{}
ERROR_git_repository_not_exists         = Repository '{}' neexistuje
ERROR_git_tag_not_exists                = Tag '{}' neexistuje
ERROR_git_release_branch_not_exists     = Nerozpoznana branch '{}'. Dostupne branche su: {}
ERROR_git_releaser_cannot_release       = {} release zlyhal pretoze release {} uz existuje. overwrite = false; update = false
git.releaser.link.discussion            = prepaja sa release {} s discussion {}
git.releaser.link.discussion.error      = Nepodarilo sa aktualizovat release {} s discussion kategoriou {}
ERROR_git_discussion_duplicate          = Diskusia s title "{}" uz bola posted na {}/{}
warn_ssl_disabled                       = ** SSL VALIDACIA JE DISABLED. POKRACUJTE LEN NA VLASTNE RIZIKO **
warn_ssh_disabled                       = ** SSH HOST VERIFIKACIA JE DISABLED. POKRACUJTE LEN NA VLASTNE RIZIKO **
webhook.connection.open                 = otvara sa pripojenie
webhook.connection.configure            = konfiguruje sa pripojenie
webhook.message.send                    = odosiela sa message
webhook.data.send                       = odosielaju sa data
webhook.response.handle                 = spracuvava sa response
sdk.operation.failed                    = {} operacia zlyhala
sdkman.release.announce                 = announcing {} release of '{}' candidate
ERROR_sdkman_announce                   = Failed to announce some candidates
sdkman.no.suitable.artifacts            = Ziadne vhodne artifacts neboli najdene. Skippuje sa
sdkman.release.announce.major           = Announcuje sa major release of '{}' candidate
sdkman.release.announce.minor           = Announcuje sa minor release of '{}' candidate
twitter.tweet                           = posielam tweet: {}
twitter.tweet.size                      = status je {} chars dlhy
ERROR_unexpected_json_format            = Neocakavana chyba pri formatovani message ako JSON
mail.message.send                       = Odosiela sa e-mail announcement
s3.bucket.check                         = kontroluje sa ci bucket {} existuje
s3.bucket.create                        = vytvara sa bucket {}
s3.object.check                         = checking if s3://{}/{} exists
s3.object.create                        = vytvara sa s3://{}/{}
s3.object.write                         = zapisuje sa s3://{}/{}
s3.object.acl                           = pridava sa READ permission do s3://{}/{}
ERROR_unexpected_s3_client_config       = Chyba pri buildovani AWS S3 clienta

disco.fetch.packages                    = dotahuju sa packages s {}
disco.fetch.package                     = dotahuju sa packages {}
disco.multiple.packages                 = Disco vratilo {} package(s)
disco.package.not.downloadable          = {} nieje mozne stiahnut priamo
ERROR_disco_resolve_package             = Disco nevratilo ziadne vysledky: {}
ERROR_disco_resolve_pkg                 = Disco nevartilo ziadne vysledky pre ephemeralId {}
